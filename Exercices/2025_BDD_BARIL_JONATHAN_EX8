-- Requête 1: on vient ajouter une nouvelle table disponibilités comme indiqué dans l'énoncé.
CREATE TABLE Disponibilite (
    id_disponibilite VARCHAR(50) PRIMARY KEY,
    id_materiel VARCHAR(50) NOT NULL,
    date_debut DATE NOT NULL,
    date_fin DATE NOT NULL,
    FOREIGN KEY (id_materiel) REFERENCES Materiel(id_materiel)
);

-- Requête 2: On vient modifier la table Reservation pour y ajouter une nouvelle colonne id_disponibilité avec clé étrangère référençant la table disponibilité
ALTER TABLE Reservation
ADD COLUMN id_disponibilite VARCHAR(50);

ALTER TABLE Reservation
ADD CONSTRAINT fk_disponibilite
FOREIGN KEY (id_disponibilite) REFERENCES Disponibilite(id_disponibilite);

-- Requête 4: On vient ajouter une fonctionnalité permettant de vérifier qu'une disponibilité est OK ou KO
SELECT 
    CASE
        WHEN '2025-06-01' >= date_debut AND '2025-06-05' <= date_fin
        THEN 'OK'
        ELSE 'KO'
    END AS statut_disponibilite
FROM Disponibilite
WHERE id_materiel = 'M1';

-- Requête 5.1: Ajout d'une fonctionnalité admin permettant d'ajouter une disponibilité :
INSERT INTO Disponibilite (id_disponibilite, id_materiel, date_debut, date_fin)
VALUES ('D1', 'M1', '2025-06-01', '2025-06-10');

-- Requête 5.2: Ajout d'une fonctionnalité admin permettant de modifier une disponibilité :
UPDATE Disponibilite
SET date_fin = '2025-06-15'
WHERE id_disponibilite = 'D1';

-- Requête 5.3: Ajout d'une fonctionnalité admin permettant de supprimer une disponibilité :
DELETE FROM Disponibilite
WHERE id_disponibilite = 'D1';

-- Requête 6.1: Je viens tester si une reservation se créer sur une période disponible que j'ai créé avant dans la requête 5.1 et je viens ensuite tester sur une période indisponible.
INSERT INTO Reservation (
    id_reservation, date_debut, date_fin, statut, quantite_reservee,
    id_utilisateur, id_materiel, id_disponibilite
)
SELECT 
    'R100', '2025-06-02', '2025-06-05', 'validee', 1,
    'U1', 'M1', id_disponibilite
FROM Disponibilite
WHERE id_materiel = 'M1'
  AND '2025-06-02' >= date_debut
  AND '2025-06-05' <= date_fin;

-- Résultat : la réservation a été créée

-- Requête 6.2: Je teste maintenant dans une période indisponible
INSERT INTO Reservation (
    id_reservation, date_debut, date_fin, statut, quantite_reservee,
    id_utilisateur, id_materiel, id_disponibilite
)
SELECT 
    'R101', '2025-06-11', '2025-06-15', 'validee', 1,
    'U2', 'M1', id_disponibilite
FROM Disponibilite
WHERE id_materiel = 'M1'
  AND '2025-06-11' >= date_debut
  AND '2025-06-15' <= date_fin;

-- Résultat : la réservation ne s'est pas créée

